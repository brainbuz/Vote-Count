# ABSTRACT: Range Ballot Methods for Vote::Count. Toolkit for vote counting.

=pod

=head1 Name

Vote::Count::Range

=head1 VERSION 2.04

=cut

#buildpod

=pod

=head1 Range (Score) Voting Overview

Range or Score Voting is another form of preferential ballot.

=over

=item *

There are a fixed number of Rankings available, usually 5, 10 or 100.

=item *

Voters (typically) may rate choices equally.

=item *

Voters rate their best choice highest, the inverse of Ranked Choice.

=back

Range Voting is usually resolved by using the ratings assigned by the voters as a score. By fixing the number of available rankings it resolves Borda Count's weighting problem. Condorcet can resolve Range Voting, but the ability to rank choices equally increases the possibility of ties. When resolving by IRV it is necessary to split the vote for equally ranked choices.

=head1 Reading Range Ballots

See L<Vote::Count::ReadBallots|https://metacpan.org/pod/Vote::Count::ReadBallots>

=head1 Range Methods

=head2 Score

Score is a method provided by L<Vote::Count::Score|https://metacpan.org/pod/Vote::Count::Score> that will score the ballots based on the scores provided by the voters.

=head2 STAR (Score Then Automatic Runoff)

Creates a runoff between the top 2 choices. Implemented in L<Vote::Count::Method::STAR|https://metacpan.org/pod/Vote::Count::Method::STAR>.

=head2 Condorcet

L<Vote::Count::Matrix|https://metacpan.org/pod/Vote::Count::Matrix> supports Range Ballots. Choices scored equally are not counted in pairings between the equal choices.

=head2 IRV

L<Vote::Count::IRV|https://metacpan.org/pod/Vote::Count::IRV> supports Range Ballots. Equal Scores are split. The split votes are tabulated with Rational Number Math to protect against rounding errors.

=head2 Tie Breakers

Precedence, Approval, all and none currently support Range Ballots.

=cut

#buildpod

#FOOTER

=pod

BUG TRACKER

L<https://github.com/brainbuz/Vote-Count/issues>

AUTHOR

John Karr (BRAINBUZ) brainbuz@cpan.org

CONTRIBUTORS

Copyright 2019-2021 by John Karr (BRAINBUZ) brainbuz@cpan.org.

LICENSE

This module is released under the GNU Public License Version 3. See license file for details. For more information on this license visit L<http://fsf.org>.

SUPPORT

This software is provided as is, per the terms of the GNU Public License. Professional support and customisation services are available from the author.

=cut

